name: run ui test

on: 
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose tests set
        required: true
        type: choice
        default: smoke
        options:
          - all
          - smoke
          - positive
          - negative
          - extended

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: >
          ARTIFACT_ID=$(curl "https://api.github.com/repos/Wladdima/gui_test_project/actions/artifacts?name=allure-results" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl https://api.github.com/repos/Wladdima/gui_test_project/actions/artifacts/$ARTIFACT_ID/zip 
          -o artifacts.zip 
          &&
          REPORT_ID=$(curl "https://api.github.com/repos/Wladdima/gui_test_project/actions/artifacts?name=github-pages" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          https://api.github.com/repos/Wladdima/gui_test_project/actions/artifacts/$REPORT_ID/zip 
          -o pages.zip
      - run: ls
      # - run: mkdir allure-results && unzip artifacts.zip -d allure-result
      # - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      # - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
      # - run: cp pages_history/history/* artifacts.zip && cp -r pages_history/history artifacts.zip
      - name: Store allure history
        uses: actions/upload-artifact@v3
        with:
          # name: allure-results
          # path: allure-results
          name: artifacts.zip
          path: artifacts.zip
          retention-days: 7
  
  run-ui-tests:
    runs-on: ubuntu-latest
    name: Run UI autotests
    needs: download-history
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run all tests
        if: "github.event.inputs.deployment_target == 'all'"
        run: pytest --alluredir=allure-results
        continue-on-error: true
      - name: Run smoke tests
        if: "github.event.inputs.deployment_target == 'smoke'"
        run: pytest -m smoke --alluredir=allure-results
        continue-on-error: true
      - name: Run positive tests
        if: "github.event.inputs.deployment_target == 'positive'"
        run: pytest -m positive --alluredir=allure-results
        continue-on-error: true
      - name: Run negative tests
        if: "github.event.inputs.deployment_target == 'negative'"
        run: pytest -m negative --alluredir=allure-results
        continue-on-error: true
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 7

  generate-report:
    name: Generate allure report
    runs-on: ubuntu-latest
    needs: run-ui-tests
    steps:
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'
      - name: Install Allure
        run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz && sudo tar -zxvf allure-2.29.0.tgz -C /opt/ && sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Generate report
        run: allure generate -c allure-results -o _site
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 7

    
  publish-report:
    name: Report publication
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v4
